// <auto-generated />
using System;
using FNSC.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FNSC.Migrations
{
    [DbContext(typeof(ChampionshipContext))]
    partial class ChampionshipContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("FNSC.Data.Battle", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Position")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("RoundId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoundNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Song1Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Song2Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("Votes1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Votes2")
                        .HasColumnType("INTEGER");

                    b.Property<string>("WinnerId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoundId");

                    b.HasIndex("Song1Id");

                    b.HasIndex("Song2Id");

                    b.HasIndex("WinnerId");

                    b.ToTable("Battles");
                });

            modelBuilder.Entity("FNSC.Data.Game", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("AllowDoubles")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AllowVoteCorrection")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChampionshipNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CurrentRoundId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FinishTimestamp")
                        .HasColumnType("TEXT");

                    b.Property<bool>("GameFinished")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("InitTimestamp")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsVotingOpen")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("MaxSongLength")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("MinSongLength")
                        .HasColumnType("TEXT");

                    b.Property<int>("NoOfRounds")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NoOfSongs")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NoOfSongsPerPerson")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PreviewTime")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("SubmissionsOpen")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Theme")
                        .HasColumnType("TEXT");

                    b.Property<int>("VotingTime")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CurrentRoundId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("FNSC.Data.Round", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CurrentBattleId")
                        .HasColumnType("TEXT");

                    b.Property<int>("CurrentBattleNo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GameId")
                        .HasColumnType("TEXT");

                    b.Property<int>("RoundNumber")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CurrentBattleId");

                    b.HasIndex("GameId");

                    b.ToTable("Rounds");
                });

            modelBuilder.Entity("FNSC.Data.Song", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Channel")
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("GameId")
                        .HasColumnType("TEXT");

                    b.Property<string>("GameId1")
                        .HasColumnType("TEXT");

                    b.Property<int>("InitialStarttime")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("Length")
                        .HasColumnType("TEXT");

                    b.Property<int>("Starttime")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.Property<string>("Viewerid")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("GameId1");

                    b.HasIndex("Viewerid");

                    b.ToTable("Songs");
                });

            modelBuilder.Entity("FNSC.Data.Viewer", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("TEXT");

                    b.Property<string>("display")
                        .HasColumnType("TEXT");

                    b.Property<string>("name")
                        .HasColumnType("TEXT");

                    b.Property<int>("role")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("subscribed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("type")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Viewers");

                    b.HasData(
                        new
                        {
                            id = "12640",
                            display = "Credulus",
                            name = "credulus",
                            role = 3,
                            subscribed = false,
                            type = "twitch"
                        },
                        new
                        {
                            id = "79268687",
                            display = "Karvaooppeli",
                            name = "karvaooppeli",
                            role = 1,
                            subscribed = false,
                            type = "twitch"
                        },
                        new
                        {
                            id = "264243225",
                            display = "wizenedwizards",
                            name = "wizenedwizards",
                            role = 1,
                            subscribed = false,
                            type = "twitch"
                        },
                        new
                        {
                            id = "206992018",
                            display = "NoBuddyIsPerfect",
                            name = "nobuddyisperfect",
                            role = 3,
                            subscribed = false,
                            type = "twitch"
                        },
                        new
                        {
                            id = "725622089",
                            display = "Retisska",
                            name = "retisska",
                            role = 3,
                            subscribed = true,
                            type = "twitch"
                        },
                        new
                        {
                            id = "955237329",
                            display = "FrostyToolsDotCom",
                            name = "frostytoolsdotcom",
                            role = 3,
                            subscribed = false,
                            type = "twitch"
                        },
                        new
                        {
                            id = "641794374",
                            display = "hans154",
                            name = "hans154",
                            role = 1,
                            subscribed = false,
                            type = "twitch"
                        },
                        new
                        {
                            id = "756550096",
                            display = "omos1",
                            name = "omos1",
                            role = 2,
                            subscribed = false,
                            type = "twitch"
                        },
                        new
                        {
                            id = "498666678",
                            display = "SaltSkeggur",
                            name = "saltskeggur",
                            role = 1,
                            subscribed = false,
                            type = "twitch"
                        },
                        new
                        {
                            id = "674951982",
                            display = "ghe_di",
                            name = "ghe_di",
                            role = 1,
                            subscribed = false,
                            type = "twitch"
                        },
                        new
                        {
                            id = "535004677",
                            display = "ItReins",
                            name = "itreins",
                            role = 2,
                            subscribed = false,
                            type = "twitch"
                        },
                        new
                        {
                            id = "169517884",
                            display = "AndyInTheFork",
                            name = "andyinthefork",
                            role = 3,
                            subscribed = false,
                            type = "twitch"
                        },
                        new
                        {
                            id = "100135110",
                            display = "StreamElements",
                            name = "streamelements",
                            role = 3,
                            subscribed = false,
                            type = "twitch"
                        },
                        new
                        {
                            id = "401548213",
                            display = "WildTomcat5",
                            name = "wildtomcat5",
                            role = 2,
                            subscribed = false,
                            type = "twitch"
                        },
                        new
                        {
                            id = "62053184",
                            display = "pkn345",
                            name = "pkn345",
                            role = 0,
                            subscribed = false,
                            type = "twitch"
                        },
                        new
                        {
                            id = "43161910",
                            display = "gamerjaym",
                            name = "gamerjaym",
                            role = 1,
                            subscribed = false,
                            type = "twitch"
                        },
                        new
                        {
                            id = "51010749",
                            display = "Bai_nin",
                            name = "bai_nin",
                            role = 1,
                            subscribed = false,
                            type = "twitch"
                        },
                        new
                        {
                            id = "557980940",
                            display = "dcocol",
                            name = "dcocol",
                            role = 3,
                            subscribed = false,
                            type = "twitch"
                        },
                        new
                        {
                            id = "106313947",
                            display = "TheStBlaine",
                            name = "thestblaine",
                            role = 1,
                            subscribed = false,
                            type = "twitch"
                        },
                        new
                        {
                            id = "884443102",
                            display = "SheriffCroco",
                            name = "sheriffcroco",
                            role = 1,
                            subscribed = false,
                            type = "twitch"
                        },
                        new
                        {
                            id = "579901532",
                            display = "Milbrandt_2",
                            name = "milbrandt_2",
                            role = 1,
                            subscribed = false,
                            type = "twitch"
                        },
                        new
                        {
                            id = "785731504",
                            display = "1_senior",
                            name = "1_senior",
                            role = 1,
                            subscribed = false,
                            type = "twitch"
                        },
                        new
                        {
                            id = "228757727",
                            display = "bryanthecoolcat",
                            name = "bryanthecoolcat",
                            role = 1,
                            subscribed = false,
                            type = "twitch"
                        },
                        new
                        {
                            id = "876112028",
                            display = "NoAltIsPerfect",
                            name = "noaltisperfect",
                            role = 4,
                            subscribed = false,
                            type = "twitch"
                        },
                        new
                        {
                            id = "734501812",
                            display = "nobotisperfect",
                            name = "nobotisperfect",
                            role = 3,
                            subscribed = false,
                            type = "twitch"
                        });
                });

            modelBuilder.Entity("FNSC.Data.Battle", b =>
                {
                    b.HasOne("FNSC.Data.Round", null)
                        .WithMany("FinishedBattles")
                        .HasForeignKey("RoundId");

                    b.HasOne("FNSC.Data.Song", "Song1")
                        .WithMany()
                        .HasForeignKey("Song1Id");

                    b.HasOne("FNSC.Data.Song", "Song2")
                        .WithMany()
                        .HasForeignKey("Song2Id");

                    b.HasOne("FNSC.Data.Song", "Winner")
                        .WithMany()
                        .HasForeignKey("WinnerId");

                    b.Navigation("Song1");

                    b.Navigation("Song2");

                    b.Navigation("Winner");
                });

            modelBuilder.Entity("FNSC.Data.Game", b =>
                {
                    b.HasOne("FNSC.Data.Round", "CurrentRound")
                        .WithMany()
                        .HasForeignKey("CurrentRoundId");

                    b.Navigation("CurrentRound");
                });

            modelBuilder.Entity("FNSC.Data.Round", b =>
                {
                    b.HasOne("FNSC.Data.Battle", "CurrentBattle")
                        .WithMany()
                        .HasForeignKey("CurrentBattleId");

                    b.HasOne("FNSC.Data.Game", null)
                        .WithMany("Rounds")
                        .HasForeignKey("GameId");

                    b.Navigation("CurrentBattle");
                });

            modelBuilder.Entity("FNSC.Data.Song", b =>
                {
                    b.HasOne("FNSC.Data.Game", null)
                        .WithMany("PreSubmittedSongs")
                        .HasForeignKey("GameId");

                    b.HasOne("FNSC.Data.Game", null)
                        .WithMany("SubmittedSongs")
                        .HasForeignKey("GameId1");

                    b.HasOne("FNSC.Data.Viewer", "Viewer")
                        .WithMany()
                        .HasForeignKey("Viewerid");

                    b.Navigation("Viewer");
                });

            modelBuilder.Entity("FNSC.Data.Game", b =>
                {
                    b.Navigation("PreSubmittedSongs");

                    b.Navigation("Rounds");

                    b.Navigation("SubmittedSongs");
                });

            modelBuilder.Entity("FNSC.Data.Round", b =>
                {
                    b.Navigation("FinishedBattles");
                });
#pragma warning restore 612, 618
        }
    }
}
